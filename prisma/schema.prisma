// データソースの設定
// 使用するデータベースはMySQLで、環境変数から接続URLを取得
// 関連性のモードはPrismaを使用
datasource db {
  provider     = "mysql"       // 使用するデータベースのプロバイダ
  url          = env("DATABASE_URL")  // データベースの接続URL
  relationMode = "prisma"     // 関連性のモード
}

// クライアントジェネレータの設定
// PrismaのJavaScriptクライアントを使用
generator client {
  provider = "prisma-client-js"  // 使用するクライアントのプロバイダ
}

// ユーザーごとのAPI制限を管理するモデル
model UserApiLimit {
  id        String      @id @default(cuid())       // 一意のID
  userId    String   @unique                      // ユーザーID (一意)
  count     Int      @default(0)                  // API呼び出し回数
  createdAt DateTime @default(now())              // 作成日時
  updatedAt DateTime @updatedAt                   // 更新日時
}

// ユーザーごとのサブスクリプションを管理するモデル
model UserSubscription {
  id        String      @id @default(cuid())  // 一意のID
  userId    String   @unique                 // ユーザーID
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")  // Stripeの決済処理に使用される顧客ID
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")  // Stripeの定期購読管理に使用されるID
  stripePriceId          String?   @map(name: "stripe_price_id")  // 定期購読の価格を識別するために使用されるID
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")  // Stripeの現在の期間終了日時, 定期購読の現在の支払期間の終了日時
}

// ユーザー情報を管理するモデル
model User {
  id                   String   @id @default(uuid())              // 一意識別子
  userid               String   @unique                           // ユーザーID
  firstName            String?                                    // 名
  lastName             String?                                    // 姓
  imageUrl             String?                                   // プロフィール画像のURL
  primaryEmailAddress  Json?                                      // メールアドレス
  createdAt            DateTime @default(now())                   // 作成日時
  updatedAt            DateTime @updatedAt                        // 更新日時
}
